name: Release Charts

on:
  workflow_dispatch:
    inputs:
      coolify_version:
        description: "Coolify version to use for release (for example 4.0.0-beta.418)"
        required: true
      bump:
        description: "Chart version bump level"
        required: true
        type: choice
        default: minor
        options:
          - minor
          - patch
          - major
      force_version:
        description: "Force a chart version (ignore Chart bump level)"
      mark_latest:
        description: "Mark this release as the latest"
        type: boolean
        default: true

jobs:
  release:
    permissions:
      contents: write    # For creating releases and uploading assets
      pages: write       # For updating GitHub Pages
      id-token: write    # For GitHub Pages deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0
          fetch-tags: true

      - name: Configure Git
        run: |
          git config --local user.name 'Coolify Chart Release'
          git config --local user.email 'noreply@github.com'
        
      - name: Bump Coolify chart version
        id: chart-version
        working-directory: charts/coolify
        run: |
          CHART_VERSION="${{ github.event.inputs.force_version }}"

          if [ -z "${CHART_VERSION}" ]; then
            current="$(grep -m 1 '^version:' Chart.yaml | awk '{print $2}')"

            RE='([0-9]+)\.([0-9]+)\.([0-9]+)'

            MAJOR=`echo $current | sed -E "s#$RE#\1#"`
            MINOR=`echo $current | sed -E "s#$RE#\2#"`
            PATCH=`echo $current | sed -E "s#$RE#\3#"`

            if [ "${{ github.event.inputs.bump }}" == "major" ]; then
              MAJOR=$((MAJOR+1))
              MINOR=0
              PATCH=0
            elif [ "${{ github.event.inputs.bump }}" == "minor" ]; then
              MINOR=$((MINOR+1))
              PATCH=0
            else
              PATCH=$((PATCH+1))
            fi
            CHART_VERSION="$MAJOR.$MINOR.$PATCH"
          fi
          
          echo "chart_version=$CHART_VERSION" >> "$GITHUB_OUTPUT"
  
      - name: Update image tags and chart
        uses: mikefarah/yq@v4
        with:
          cmd: |
            yq -i '.appVersion = "${{ github.event.inputs.coolify_version }}"' charts/coolify/Chart.yaml
            yq -i '.version = "${{ steps.chart-version.outputs.chart_version }}"' charts/coolify/Chart.yaml
    
      - name: Check for changes and commit
        working-directory: charts/coolify
        run: |
          # Check if there are any changes to commit
          if git diff --quiet Chart.yaml; then
            echo "No changes detected in Chart.yaml, skipping commit"
            # Still create and push the tag even if no chart changes
            git tag -a "coolify-${{ steps.chart-version.outputs.chart_version }}" -m "Release Chart: ${{ steps.chart-version.outputs.chart_version }}"
            git push --tags origin main
          else
            echo "Changes detected, committing and tagging"
            git add Chart.yaml
            git commit -m "Update Chart to ${{ steps.chart-version.outputs.chart_version }}"
            git tag -a "coolify-${{ steps.chart-version.outputs.chart_version }}" -m "Release Chart: ${{ steps.chart-version.outputs.chart_version }}"
            git push --tags origin main
          fi

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Add dependency repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          mark_as_latest: "${{ github.event.inputs.mark_latest }}"
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
