apiVersion: v1
kind: Pod
metadata:
  name: {{ include "coolify.fullname" . }}-test-connection
  namespace: {{ include "coolify.namespace" . }}
  labels:
    {{ include "coolify.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  restartPolicy: Never
  containers:
    - name: test-coolify-connection
      image: curlimages/curl:latest
      command:
        - sh
        - -c
      args:
        - |
          echo "Testing Coolify application connection..."
          curl -f http://{{ include "coolify.coolifyApp.serviceName" . }}.{{ include "coolify.namespace" . }}.svc.cluster.local:{{ .Values.coolifyApp.service.port }}/api/health || exit 1
          echo "Coolify connection test passed!"
    {{ if .Values.postgresql.enabled }}
    - name: test-postgresql-connection
      image: postgres:15-alpine
      env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "coolify.postgresql.fullname" . }}
              key: DB_PASSWORD
      command: 
        - 'sh'
        - '-c'
      args:
        - |
          echo "Testing PostgreSQL connection..."
          pg_isready -h {{ include "coolify.postgresql.serviceName" . }}.{{ include "coolify.namespace" . }}.svc.cluster.local -p 5432 -U coolify || exit 1
          echo "PostgreSQL connection test passed!"
    {{ end }}
    {{ if .Values.redis.enabled }}
    - name: test-redis-connection
      image: redis:7-alpine
      env:
        - name: REDISCLI_AUTH
          valueFrom:
            secretKeyRef:
              name: {{ include "coolify.redis.fullname" . }}
              key: REDIS_PASSWORD
      command: 
        - 'sh'
        - '-c'
      args:
        - |
          echo "Testing Redis connection..."
          redis-cli -h {{ include "coolify.redis.serviceName" . }}.{{ include "coolify.namespace" . }}.svc.cluster.local -p 6379 ping || exit 1
          echo "Redis connection test passed!"
    {{ end }}
